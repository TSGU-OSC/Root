#include<stdio.h>
int fun(int a[15][15])//黑棋判断胜负
{
	int i,j,p=0,n,m;
	static int t1=0,t2=0,t3=0,t4=0;
	for(i=0;i<15;i++)//横向扫描
	{
		for(j=0;j<15;j++)
		{
			if(a[i][j]==1)
			{
				t1++;
			}
			if(a[i][j]!=1)//判断是否连续
			{
				t1=0;
			}
			if(t1>=5)
			{
				p=1;
				return p;
			}
		}
	}
	for(j=0;j<15;j++)//竖向扫描
	{
		for(i=0;i<15;i++)
		{
			if(a[i][j]==1)
			{
				t2++;
			}
			if(a[i][j]!=1)
			{
				t2=0;
			}
			if(t2>=5)
			{
				p=1;
				return p;
			}
		}
	}
	for(i=0;i<15;i++)//左斜扫描
	{
		for(j=0;j<15;j++)
		{
			for(n=i,m=j;n<15&&m<15;n++,m++)
			{
				if(a[n][m]==1)
			{
				t3++;
			}
			if(a[n][m]!=1)
			{
				t3=0;
			}
			if(t3>=5)
			{
				p=1;
				return p;
			}
			}
		}
	}
	for(i=0;i<15;i++)//右斜扫描
	{
		for(j=0;j<15;j++)
		{
			for(n=i,m=j;n>=0&&m<15;n--,m++)
			{
				if(a[n][m]==1)
			{
				t4++;
			}
			if(a[n][m]!=1)
			{
				t4=0;
			}
			if(t4>=5)
			{
				p=1;
				return p;
			}
			}
		}
	}
	return p=0;
}
int fun2(int a[15][15])//白棋判断胜负
{
	int i,j,p=0,n,m;
	static int r1=0,r2=0,r3=0,r4=0;
	for(i=0;i<15;i++)
	{
		
		for(j=0;j<15;j++)
		{
			if(a[i][j]==2)
			{
				r1++;
			}
			if(a[i][j]!=2)
			{
				r1=0;
			}
			if(r1>=5)
			{
				p=2;
				return p;
			}
		}
	}
	for(j=0;j<15;j++)
	{
		for(i=0;i<15;i++)
		{
			if(a[i][j]==2)
			{
				r2++;
			}
			if(a[i][j]!=2)
			{
				r2=0;
			}
			if(r2>=5)
			{
				p=2;
				return p;
			}
		}
	}
	for(i=0;i<15;i++)
	{
		for(j=0;j<15;j++)
		{
			for(n=i,m=j;n<15&&m<15;n++,m++)
			{
				if(a[n][m]==2)
			{
				r3++;
			}
			if(a[n][m]!=2)
			{
				r3=0;
			}
			if(r3>=5)
			{
				p=2;
				return p;
			}
			}
		}
	}
	for(i=0;i<15;i++)
	{
		for(j=0;j<15;j++)
		{
			for(n=i,m=j;n>=0&&m<15;n--,m++)
			{
				if(a[n][m]==2)
			{
				r4++;
			}
			if(a[n][m]!=2)
			{
				r4=0;
			}
			if(r4>=5)
			{
				p=2;
				return p;
			}
			}
		}
	}
	return p=0;
}
int fun3(int a[15][15])//打印棋盘
{
	int i,j;
	for(i=0;i<15;i++)
	{
		for(j=0;j<15;j++)
		{
		printf("%d",a[i][j]);
		printf(" ");
		}
		printf("\n");
	}
}
int fun4(int a[15][15])//给棋盘赋初值0
{
	int i,j;
	for(i=0;i<15;i++)
	{
		for(j=0;j<15;j++)
		{
			a[i][j]=0;
		printf("%d",a[i][j]);
		printf(" ");
		}
		printf("\n");
	}
}
int fun5(int a[15][15])//验证是否和棋
{
	int i,j,k=0;
	for(i=0;i<15;i++)//判断棋盘是否下满
		{
			for(j=0;j<15;j++)
			{
				if(a[i][j]==0)
				{
					k++;
				}
			}
		}
		return k;
}
int fun6(int a[15][15])//黑棋部分
{
	int c,d,p,v,b=0;
	printf("黑棋请下\n");
		scanf("%d %d",&c,&d);//下黑棋
		if(c<15&&c>=0&&d<15&&d>=0)
		{
			b=1;
		}
			if(a[c][d]==0&&b==1)//判断下棋位置是否合规
			{
		       a[c][d]=1;
		       fun3(a);
	           p=fun(a);
			}
			else//不合理重新下棋
			{
				for(v=0;v==0;)
				{
					printf("reenter\n");
					printf("黑棋请下\n");
				    scanf("%d %d",&c,&d);
					if(c<15&&c>=0&&d<15&&d>=0)
					{
						b=1;
					}
			if(a[c][d]==0&&b==1) 
			{
				v=1;
				b=0;
		        a[c][d]=1;
		        fun3(a);
	            p=fun(a);
			}
				}
			}
			return p;
}
int fun7(int a[15][15])//白棋部分
{
	int e,f,p,s=0,v;
	printf("白棋请下\n");
	scanf("%d %d",&e,&f);
	s=0;
	if(e<15&&e>=0&&f<15&&f>=0)
		{
			s=1;
		}
		if(a[e][f]==0&&s==1)
		{
	a[e][f]=2;
	fun3(a);
	p=fun2(a);
		}
		else {
			for(v=0;v==0;)
			{
				printf("reenter\n");
				printf("白棋请下\n");
			    scanf("%d %d",&e,&f);
				if(e<15&&e>=0&&f<15&&f>=0)
				{
					s=1;
				}
				if(a[e][f]==0&&s==1)
				{
					v=1;
					s=0;
	                a[e][f]=2;
	                fun3(a);
	                p=fun2(a);
				}
			}
		}
}
int main()
{
	int a[15][15];
	int i,j,t=0,b=0,c,d,e,f,p=0,k=0,v,s=0,u;
	fun4(a);
	printf("游戏开始\n");
	printf("请输入坐标如 0 0\n");
	printf("游戏结束时如需重新开始请输入3\n");
	while(p==0)//循环下棋
	{
		k=fun5(a); 
		if(k==0)
		{
			printf("Draw\n");//平局
			printf("如需重新开始请输入3\n");
			scanf("%d",&u);
			if(u==3)
			{
				fun4(a);
			}
			else break;
		}
		p=fun6(a);
	if(p==1)
	{
		printf("black win\n");
		 printf("如需重新开始请输入3\n");
		scanf("%d",&u);
		if(u==3)
		{
			p=0;
			fun4(a);
			fun6(a);
		}
		else break;
	}
	k=fun5(a);
		if(k==0)
		{
			printf("Draw\n");
			printf("如需重新开始请输入3\n");
			scanf("%d",&u);
			if(u==3)
			{
				fun4(a);
			}
			else break;
		}
		p=fun7(a);
	if(p==2)
	{
		printf("white win\n");
		printf("如需重新开始请输入3\n");
		scanf("%d",&u);
		if(u==3)
		{
			p=0;
			fun4(a);
		}
		else break;
	}
	}
return 0;
}